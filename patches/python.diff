--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -348,7 +348,7 @@
 endif()
 set(INCLUDE_INSTALL_DIR include/python${LD_VERSION})
 if(MSVC)
-    set(INCLUDE_INSTALL_DIR include)
+    set(INCLUDE_INSTALL_DIR include/python)
 endif()
 # Build tree directory
 set(BIN_BUILD_DIR ${PROJECT_BINARY_DIR}/bin)
--- a/cmake/libpython/CMakeLists.txt
+++ b/cmake/libpython/CMakeLists.txt
@@ -506,6 +506,10 @@
     set_target_properties(libpython-shared PROPERTIES
         ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/${LIBPYTHON_ARCHIVEDIR}
     )
+    if(MSVC)
+        set_target_properties(libpython-shared PROPERTIES COMPILE_PDB_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR} COMPILE_PDB_NAME python27)
+        install(FILES ${PROJECT_BINARY_DIR}/RelWithDebInfo/python27.pdb DESTINATION lib CONFIGURATIONS RelWithDebInfo)
+    endif()
     if(APPLE)
         # HACK For python <= 2.7.3, this fix link error related to undefined _environ symbol and
         #      is equivalent to solution implemented in commit http://hg.python.org/cpython/rev/864b983
--- a/Modules/posixmodule.c
+++ b/Modules/posixmodule.c
@@ -558,7 +558,7 @@
     char osfile;
 } my_ioinfo;
 
-extern __declspec(dllimport) char * __pioinfo[];
+// extern __declspec(dllimport) char * __pioinfo[];
 #define IOINFO_L2E 5
 #define IOINFO_ARRAY_ELTS   (1 << IOINFO_L2E)
 #define IOINFO_ARRAYS 64
@@ -570,6 +570,7 @@
 int
 _PyVerify_fd(int fd)
 {
+#if _MSC_VER < 1900
     const int i1 = fd >> IOINFO_L2E;
     const int i2 = fd & ((1 << IOINFO_L2E) - 1);

@@ -602,6 +603,7 @@
   fail:
     errno = EBADF;
     return 0;
+#endif
 }
 
 /* the special case of checking dup2.  The target fd must be in a sensible range */
--- a/Modules/timemodule.c
+++ b/Modules/timemodule.c
@@ -650,6 +650,7 @@
 Convert a time tuple in local time to seconds since the Epoch.");
 #endif /* HAVE_MKTIME */
 
+#define HAVE_WORKING_TZSET 1
 #ifdef HAVE_WORKING_TZSET
 static void inittimezone(PyObject *module);
 
@@ -707,7 +708,7 @@
      */
 #if defined(HAVE_TZNAME) && !defined(__GLIBC__) && !defined(__CYGWIN__)
     tzset();
-#ifdef PYOS_OS2
+#if defined(PYOS_OS2) || defined(MS_WINDOWS)
     PyModule_AddIntConstant(m, "timezone", _timezone);
 #else /* !PYOS_OS2 */
     PyModule_AddIntConstant(m, "timezone", timezone);
@@ -715,15 +716,15 @@
 #ifdef HAVE_ALTZONE
     PyModule_AddIntConstant(m, "altzone", altzone);
 #else
-#ifdef PYOS_OS2
+#if defined(PYOS_OS2) || defined(MS_WINDOWS)
     PyModule_AddIntConstant(m, "altzone", _timezone-3600);
 #else /* !PYOS_OS2 */
     PyModule_AddIntConstant(m, "altzone", timezone-3600);
 #endif /* PYOS_OS2 */
 #endif
-    PyModule_AddIntConstant(m, "daylight", daylight);
+    PyModule_AddIntConstant(m, "daylight", _daylight);
     PyModule_AddObject(m, "tzname",
-                       Py_BuildValue("(zz)", tzname[0], tzname[1]));
+                       Py_BuildValue("(zz)", _tzname[0], _tzname[1]));
 #else /* !HAVE_TZNAME || __GLIBC__ || __CYGWIN__*/
 #ifdef HAVE_STRUCT_TM_TM_ZONE
     {
--- a/PC/dl_nt.c
+++ b/PC/dl_nt.c
@@ -76,6 +76,13 @@
             OutputDebugString("Python failed to de-activate the activation context\n");
 }
 
+void myInvalidParameterHandler(const wchar_t* expression,
+  const wchar_t* function,
+  const wchar_t* file,
+  unsigned int line,
+  uintptr_t pReserved)
+{
+}
 BOOL    WINAPI  DllMain (HANDLE hInst,
                                                 ULONG ul_reason_for_call,
                                                 LPVOID lpReserved)
@@ -87,6 +94,7 @@
             // 1000 is a magic number I picked out of the air.  Could do with a #define, I spose...
             LoadString(hInst, 1000, dllVersionBuffer, sizeof(dllVersionBuffer));
 
+            _set_invalid_parameter_handler(myInvalidParameterHandler);
             // and capture our activation context for use when loading extensions.
             _LoadActCtxPointers();
             if (pfnGetCurrentActCtx && pfnAddRefActCtx)
--- a/PC/pyconfig.h
+++ b/PC/pyconfig.h
@@ -335,7 +335,7 @@
 			their Makefile (other compilers are generally
 			taken care of by distutils.) */
 #			ifdef _DEBUG
-#				pragma comment(lib,"python27_d.lib")
+#				pragma comment(lib,"python27.lib")
 #			else
 #				pragma comment(lib,"python27.lib")
 #			endif /* _DEBUG */
@@ -376,9 +376,11 @@
 #	endif
 #endif
 
+#if 0
 #ifdef _DEBUG
 #	define Py_DEBUG
 #endif
+#endif
 
 
 #ifdef MS_WIN32
